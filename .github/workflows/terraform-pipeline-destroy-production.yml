name: "Terraform Destroy Action - Production"

on:
  workflow_dispatch:
    branches: production

permissions:
      id-token: write 
      contents: read 
      pull-requests: write

env:
  TF_LOG: INFO
  AWS_REGION: ${{ secrets.AWS_REGION_PRODUCTION }}

jobs:
  deploy:
    strategy:
      max-parallel: 1
      matrix:
        environment: [production]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Git Checkout
        uses: actions/checkout@v3

      - name: Configure AWS Credentials From AWS Account
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_PRODUCTION }}
          aws-region: ${{ secrets.AWS_REGION_PRODUCTION }}
          role-session-name: GitHub-OIDC-TERRAFORM-PRODUCTION

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.2.9
          terraform_wrapper: false

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check
        continue-on-error: false

      - name: Terraform Init
        id: init
        env:
          AWS_BUCKET_NAME: ${{ secrets.AWS_BUCKET_NAME_PRODUCTION }}
          AWS_BUCKET_KEY_NAME: ${{ secrets.AWS_BUCKET_KEY_NAME_PRODUCTION }}
        run: terraform init -backend-config="bucket=${AWS_BUCKET_NAME}" -backend-config="key=${AWS_BUCKET_KEY_NAME}" -backend-config="region=${AWS_REGION}"

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Destroy
        id: destroy
        if: github.ref == 'refs/heads/production'
        run: terraform destroy -var-file="./${{ matrix.environment }}/variables.tfvars" -auto-approve -input=false
